@page "/settings"
@using PayMeNextApp.Shared
@inject IJSRuntime JSRuntime

<PageTitle>Settings - PayMeNext</PageTitle>

<div class="settings-container text-white">
    <header class="settings-header mb-8">
        <h1 class="text-4xl font-bold">Settings</h1>
        <p class="text-gray-400">Customize your PayMeNext experience</p>
    </header>

    <div class="space-y-8">
        <Card Class="bg-gray-800 p-6">
            <h3 class="text-2xl font-semibold mb-6">Appearance</h3>
            <div class="space-y-6">
                <div class="flex justify-between items-center">
                    <label class="text-lg">Theme</label>
                    <select class="bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500" @bind="selectedTheme">
                        <option value="dark">Dark</option>
                        <option value="light">Light</option>
                        <option value="system">System</option>
                    </select>
                </div>
                <div class="flex justify-between items-center">
                    <label class="text-lg">Accent Color</label>
                    <div class="flex space-x-3">
                        <button class="w-8 h-8 rounded-full bg-blue-500" @onclick='() => SetAccentColor("blue")'></button>
                        <button class="w-8 h-8 rounded-full bg-green-500" @onclick='() => SetAccentColor("green")'></button>
                        <button class="w-8 h-8 rounded-full bg-purple-500" @onclick='() => SetAccentColor("purple")'></button>
                    </div>
                </div>
            </div>
        </Card>

        <Card Class="bg-gray-800 p-6">
            <h3 class="text-2xl font-semibold mb-6">Notifications</h3>
            <div class="space-y-6">
                <div class="flex justify-between items-center">
                    <label class="text-lg">Enable Notifications</label>
                    <input type="checkbox" class="form-checkbox h-6 w-6 bg-gray-700 border-gray-600 text-blue-500 focus:ring-blue-500" @bind="notificationsEnabled" />
                </div>
                <div class="flex justify-between items-center">
                    <label class="text-lg">Reminder Frequency</label>
                    <select class="bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500" @bind="reminderFrequency" disabled="@(!notificationsEnabled)">
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="manual">Manual</option>
                    </select>
                </div>
            </div>
        </Card>

        <Card Class="bg-gray-800 p-6">
            <h3 class="text-2xl font-semibold mb-6">Data Management</h3>
            <div class="space-y-4">
                <Button Variant="secondary" OnClick="ExportData">Export My Data</Button>
                <Button Variant="danger" OnClick="ClearCache">Clear Local Cache</Button>
            </div>
        </Card>
    </div>
</div>

@code {
    private string selectedTheme = "dark";
    private string reminderFrequency = "weekly";
    private bool notificationsEnabled = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("gsap.from", ".settings-header", new { opacity = 0, y = -50, duration = 0.8, ease = "power3.out" });
            await JSRuntime.InvokeVoidAsync("gsap.from", ".card", new { opacity = 0, y = 50, duration = 0.5, stagger = 0.2, ease = "power2.out" });
        }
    }

    private void SetAccentColor(string color)
    {
        // Logic to change accent color
    }

    private void ExportData()
    {
        // Logic to export data
    }

    private void ClearCache()
    {
        // Logic to clear cache
    }
}

